{"version":3,"sources":["components/inputAlert.tsx","components/searchForm.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["InputAlert","_ref","errorState","React","createElement","className","data-state","type","xmlns","aria-hidden","focusable","width","height","viewBox","fill","d","iconPath","message","inputError","inputSuccess","SearchForm","setSearchTerm","_React$useState","useState","_React$useState2","_slicedToArray","inputTerm","setInputTerm","_React$useState3","_React$useState4","setErrorState","searchRef","useRef","formElementRef","alertElementRef","validationRegex","RegExp","current","getAttribute","removeAttribute","setAttribute","Fragment","id","action","method","ref","onSubmit","evt","preventDefault","test","trim","handleSubmit","htmlFor","name","autoCapitalize","autoCorrect","required","pattern","onChange","target","value","aria-atomic","role","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","ActionType","reducer","LOADING_COCKTAILS","status","ERROR_LOADING_COCKTAILS","LOADED_COCKTAILS","cocktails","payload","App","_React$useReducer","useReducer","_React$useReducer2","dispatch","searchTerm","abortController","AbortController","useEffect","_asyncToGenerator","_callee","response","jsonResponse","_context","abort","fetch","concat","signal","json","drinks","t0","apply","arguments","fetchCocktails","map","cocktail","index","idDrink","href","strDrink","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c79a49b.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorState } from './searchForm';\n\ntype InputAlertProps = {\n  errorState: ErrorState;\n};\n\nexport default function InputAlert({\n  errorState,\n}: InputAlertProps): JSX.Element {\n  return (\n    <figure className=\"alert\" data-state={errorState.type}>\n      <svg\n        className=\"alert__icon\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-hidden=\"true\"\n        focusable=\"false\"\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path fill=\"currentColor\" d={errorState.iconPath} />\n      </svg>\n      <p className=\"alert__content\">{errorState.message}</p>\n    </figure>\n  );\n}\n","import React from 'react';\nimport InputAlert from './inputAlert';\n\ntype SearchFormProps = {\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>;\n};\n\ntype InputError = {\n  type: string;\n  message: string;\n  iconPath: string;\n};\n\ntype InputSuccess = {\n  type: string;\n  message: string;\n  iconPath: string;\n};\n\nexport type ErrorState = InputError | InputSuccess;\n\nconst inputError: InputError = {\n  type: 'error',\n  message: 'Please search for at least 3 characters.',\n  iconPath:\n    'M11.148 4.374a.973.973 0 01.334-.332c.236-.143.506-.178.756-.116s.474.216.614.448l8.466 14.133a.994.994 0 01-.155 1.192.99.99 0 01-.693.301H3.533a.997.997 0 01-.855-1.486zM9.432 3.346l-8.47 14.14c-.422.731-.506 1.55-.308 2.29s.68 1.408 1.398 1.822c.464.268.976.4 1.475.402H20.47a3 3 0 002.572-4.507L14.568 3.346a2.995 2.995 0 00-4.123-1.014c-.429.26-.775.615-1.012 1.014zM11 9v4a1 1 0 002 0V9a1 1 0 00-2 0zm2 8a1 1 0 10-2 0 1 1 0 002 0z',\n};\n\nconst inputSuccess: InputSuccess = {\n  type: 'success',\n  message: \"Yay! You'll see the search results below.\",\n  iconPath:\n    'M19.293 5.293L9 15.586l-4.293-4.293a.999.999 0 10-1.414 1.414l5 5a.999.999 0 001.414 0l11-11a.999.999 0 10-1.414-1.414z',\n};\n\nexport default function SearchForm({\n  setSearchTerm,\n}: SearchFormProps): JSX.Element {\n  const [inputTerm, setInputTerm] = React.useState('');\n  const [errorState, setErrorState] = React.useState(inputError);\n\n  const searchRef = React.useRef<HTMLInputElement>(null);\n  const formElementRef = React.useRef<HTMLFormElement>(null);\n  const alertElementRef = React.useRef<HTMLInputElement>(null);\n  /* get regex pattern from HTML Element, or\n     use static fallback */\n  const validationRegex = new RegExp(\n    (searchRef &&\n      searchRef.current &&\n      searchRef.current.getAttribute('pattern')) ||\n      '([a-zA-Z0-9].*?){3}',\n  );\n\n  function validate(): void {\n    /* remove HTML validation attributes\n       if using JavaScript;\n       handles user feedback with role=\"alert\" element */\n    if (searchRef && searchRef.current) {\n      searchRef.current.removeAttribute('required');\n      searchRef.current.removeAttribute('pattern');\n    }\n    if (formElementRef && formElementRef.current) {\n      formElementRef.current.setAttribute('novalidate', '');\n    }\n  }\n\n  validate();\n\n  function handleSubmit(evt: React.SyntheticEvent): void {\n    evt.preventDefault();\n\n    if (!validationRegex.test(inputTerm.trim())) {\n      setErrorState(inputError);\n      if (searchRef && searchRef.current) {\n        searchRef.current.setAttribute('aria-invalid', 'true');\n      }\n      return;\n    }\n\n    // required because arria-invalid will be true if\n    // triggering the error state first\n    if (searchRef && searchRef.current) {\n      searchRef.current.removeAttribute('aria-invalid');\n    }\n\n    setSearchTerm(inputTerm);\n    setErrorState(inputSuccess);\n  }\n\n  return (\n    <>\n      <form\n        id=\"searchForm\"\n        action=\"/\"\n        className=\"[ search__form ] [ flow ]\"\n        method=\"POST\"\n        ref={formElementRef}\n        onSubmit={(evt): void => handleSubmit(evt)}\n      >\n        <label htmlFor=\"search\">Search Cocktails</label>\n        <div className=\"inline-field-control\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            id=\"search\"\n            autoCapitalize=\"none\"\n            autoCorrect=\"off\"\n            ref={searchRef}\n            required\n            // pattern checks if at least 3 characters or digits\n            // are typed in\n            pattern=\"([a-zA-Z0-9].*?){3}\"\n            onChange={(evt): void => setInputTerm(evt.target.value)}\n          />\n          <button type=\"submit\" className=\"button\">\n            <span className=\"visually-hidden\">Search Cocktails</span>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M11.293 5.707L16.586 11H5a1 1 0 000 2h11.586l-5.293 5.293a.999.999 0 101.414 1.414l7-7a1.006 1.006 0 000-1.414l-7-7a.999.999 0 10-1.414 1.414z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </form>\n      <div\n        aria-atomic=\"true\"\n        role=\"alert\"\n        ref={alertElementRef}\n        className=\"search__alert\"\n      >\n        <InputAlert errorState={errorState} />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport SearchForm from './components/searchForm';\n\nenum ActionType {\n  LOADING_COCKTAILS = 'LOADING_COCKTAILS',\n  ERROR_LOADING_COCKTAILS = 'ERROR_LOADING_COCKTAILS',\n  LOADED_COCKTAILS = 'LOADED_COCKTAILS',\n}\n\ntype AppState<T> =\n  | { status: ActionType.LOADING_COCKTAILS }\n  | { status: ActionType.ERROR_LOADING_COCKTAILS }\n  | { status: ActionType.LOADED_COCKTAILS; cocktails: T };\n\ntype Action<T> =\n  | { type: ActionType.LOADING_COCKTAILS }\n  | { type: ActionType.ERROR_LOADING_COCKTAILS }\n  | { type: ActionType.LOADED_COCKTAILS; payload: T };\n\ntype Cocktail = {\n  idDrink: string;\n  strDrink: string;\n};\n\nfunction reducer(\n  state: AppState<Cocktail[]>,\n  action: Action<Cocktail[]>,\n): AppState<Cocktail[]> {\n  switch (action.type) {\n    case ActionType.LOADING_COCKTAILS:\n      return {\n        status: ActionType.LOADING_COCKTAILS,\n      };\n    case ActionType.ERROR_LOADING_COCKTAILS:\n      return {\n        status: ActionType.ERROR_LOADING_COCKTAILS,\n      };\n    case ActionType.LOADED_COCKTAILS:\n      return {\n        status: ActionType.LOADED_COCKTAILS,\n        cocktails: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nconst App: React.FC = () => {\n  const [state, dispatch] = React.useReducer(reducer, {\n    status: ActionType.LOADING_COCKTAILS,\n  });\n\n  const [searchTerm, setSearchTerm] = React.useState('Margarita');\n\n  const abortController = React.useRef(new AbortController());\n\n  React.useEffect(() => {\n    const fetchCocktails = async (): Promise<void> => {\n      // abort the previous request to avoid\n      // unnecessary data fetching\n      abortController.current.abort();\n      abortController.current = new AbortController();\n\n      dispatch({ type: ActionType.LOADING_COCKTAILS });\n      try {\n        const response = await fetch(\n          `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchTerm}`,\n          { signal: abortController.current.signal },\n        );\n        const jsonResponse = await response.json();\n        dispatch({\n          type: ActionType.LOADED_COCKTAILS,\n          payload: jsonResponse.drinks as Cocktail[],\n        });\n      } catch (error) {\n        dispatch({ type: ActionType.ERROR_LOADING_COCKTAILS });\n      }\n    };\n\n    fetchCocktails();\n\n    return (): void => {\n      abortController.current.abort();\n    };\n  }, [searchTerm]);\n\n  return (\n    <main className=\"center text-center\">\n      <div className=\"[ flow ]\">\n        <h1 className=\"search__heading\">TypeScript Cocktail Search</h1>\n        <SearchForm setSearchTerm={setSearchTerm} />\n        <section className=\"list\">\n          <ul>\n            {state.status === 'ERROR_LOADING_COCKTAILS' && (\n              <p>An error occured.</p>\n            )}\n            {state.status === 'LOADING_COCKTAILS' && <p>Loading...</p>}\n            {state.status === 'LOADED_COCKTAILS' && state.cocktails ? (\n              state.cocktails.map((cocktail: Cocktail, index: number) => (\n                <li\n                  className={`box ${index % 2 !== 0 && 'box__invert'}`}\n                  key={cocktail.idDrink}\n                >\n                  <a\n                    href={`https://www.thecocktaildb.com/drink/${cocktail.idDrink}-${cocktail.strDrink}`}\n                  >\n                    {cocktail.strDrink}\n                  </a>\n                </li>\n              ))\n            ) : (\n              <p>No result.</p>\n            )}\n          </ul>\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}